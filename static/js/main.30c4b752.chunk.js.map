{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","selectedTabId","onTabSelected","tabs","initialTabId","some","id","tabContent","find","content","className","map","tab","classNames","href","onClick","selectTabHandler","title","App","useState","setSelectedTabId","value","newTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,KAEMC,EAAeD,EAAKE,MAAK,qBAAGC,KAAgBL,KAC9CA,EACAE,EAAK,GAAGG,GAENC,EAAaJ,EAAKK,MAAK,qBAAGF,KAAgBF,KAAcK,QAQ9D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,CAAE,YAAaT,IAAiBQ,EAAIN,KAEtC,UAAQ,MAJV,SAOE,mBACEQ,KAAI,WAAMF,EAAIN,IACd,UAAQ,UACRS,QAAS,kBArBE,SAACH,GACpBA,EAAIN,KAAOF,GACbF,EAAcU,GAmBWI,CAAiBJ,IAHlC,SAKGA,EAAIK,SAPFL,EAAIN,WAcjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QCtCIJ,EAAO,CAClB,CAAEG,GAAI,QAASW,MAAO,QAASR,QAAS,eACxC,CAAEH,GAAI,QAASW,MAAO,QAASR,QAAS,eACxC,CAAEH,GAAI,QAASW,MAAO,QAASR,QAAS,gBAG7BS,EAAM,WACjB,MAA0CC,mBAAShB,EAAK,GAAGG,IAA3D,mBAAOL,EAAP,KAAsBmB,EAAtB,KACMR,EAAMT,EAAKK,MAAK,SAAAa,GAAK,OAAIA,EAAMf,KAAOL,KAK5C,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,EAAIK,SAE1B,cAAC,EAAD,CACEhB,cAAeA,EACfC,cAAe,SAAAoB,GAAM,OAXF,SAAAA,GAAM,OAC7BF,EAAiBE,EAAOhB,IAUKU,CAAiBM,IAC1CnB,KAAMA,QCxBdoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.30c4b752.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({\n  selectedTabId,\n  onTabSelected,\n  tabs,\n}) => {\n  const initialTabId = tabs.some(({ id }) => id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  const tabContent = tabs.find(({ id }) => id === initialTabId).content;\n\n  const selectTabHandler = (tab) => {\n    if (tab.id !== initialTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': initialTabId === tab.id },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectTabHandler(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const tab = tabs.find(value => value.id === selectedTabId);\n  const selectTabHandler = newTab => (\n    setSelectedTabId(newTab.id)\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tab.title}`}\n      </h1>\n      <Tabs\n        selectedTabId={selectedTabId}\n        onTabSelected={newTab => selectTabHandler(newTab)}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}