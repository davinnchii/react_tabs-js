{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","selectedTabId","onTabSelected","tabs","initialTabId","some","id","className","map","tab","classNames","href","onClick","title","find","content","App","useState","setSelectedTabId","value","newTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,KAEMC,EAAeD,EAAKE,MAAK,qBAAGC,KAAgBL,KAC9CA,EACAE,EAAK,GAAGG,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,CAAE,YAAaN,IAAiBK,EAAIH,KAEtC,UAAQ,MAJV,SAOE,mBACEK,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,WACHH,EAAIH,KAAOF,GACbF,EAAcO,IALpB,SASGA,EAAII,SAXFJ,EAAIH,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAKW,MAAK,qBAAGR,KAAgBF,KAAcW,cClCvCZ,EAAO,CAClB,CAAEG,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASd,EAAK,GAAGG,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KACMT,EAAMN,EAAKW,MAAK,SAAAK,GAAK,OAAIA,EAAMb,KAAOL,KAE5C,OACE,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,EAAII,SAE1B,cAAC,EAAD,CACEZ,cAAeA,EACfC,cAAe,SAAAkB,GAAM,OACnBF,EAAiBE,EAAOd,KAE1BH,KAAMA,QCvBdkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ff7b2d2.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({\n  selectedTabId,\n  onTabSelected,\n  tabs,\n}) => {\n  const initialTabId = tabs.some(({ id }) => id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': initialTabId === tab.id },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== initialTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(({ id }) => id === initialTabId).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const tab = tabs.find(value => value.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tab.title}`}\n      </h1>\n      <Tabs\n        selectedTabId={selectedTabId}\n        onTabSelected={newTab => (\n          setSelectedTabId(newTab.id)\n        )}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}